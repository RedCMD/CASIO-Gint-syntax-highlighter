{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"scopeName": "source.casio.s",
	"name": "gint",
	"patterns": [
		{ "include": "#line" }

	],
	"repository": {
		"line": {
			"match": "^([^;]+)?(;.*)?",
			"captures": {
				"1": { "patterns": [ { "include": "#label" } ] },
				"2": { "patterns": [ { "include": "#comments" } ] }
			}
		},
		"comments": {
			"match": "(;(.*?(\\\\&\\w*'?))?(.*))",
			"captures": {
				"1": { "name": "comment.line.asm" },
				"2": { "name": "support.function.asm" }
			}
		},
		"label": {
			"match": "(?:((?:\\w+)?\\\\&?\\w+'?:?|\\w+:?|(\\W+)(?:\\w+:|(?:\\w+)?\\\\&?\\w+'?:))(.*))?(.*)",
			"captures": {
				"1": { "name": "support.function.asm" },
				"2": { "name": "invalid.illegal" },
				"3": { "patterns": [ { "include": "#instructions" } ] },
				"4": { "patterns": [ { "include": "#no-label-instructions" } ] }
			}
		},
		"instructions": {
			"match": "(?i)(.*?(CLRMAC|CLRT|CLRS|NOP|RTE|RTS|SETS|SETT|SLEEP|(?:B[FT](?:/S)?|BRA|BSR)(.*)|(?:CMP/PL|CMP/PZ|DT|LDTLB|MOVT|ROTCL|ROTCR|ROTL|ROTR|SHAL|SHAR|SHLL16|SHLL[28]?|SHLR16|SHLR[28]?|TAS.B)(.*)|(?:JMP|JSR|PREF)(.*)|(?:SETRC|TRAPA)(.*)|(?:AND|X?OR|TST)(.*)|(?:ADD[CV]|CMP/(?:GE|GT|HI|HS|STR)|DIV0S|DIV1|DMUL[SU]\\.L|EXT[US]\\.[BW]|MUL\\.L|MUL[SU](?:\\.W)?|NEGC?|NOT|SH[AL]D|SUB[CV]?|SWAP\\.[BW]|XTRCT)(.*)|ADD(.*)|CMP/EQ(.*)|LDC(.*)|LDS(.*)|MOVA(.*)|MOV(.*)|STC(.*)|STS(.*)|(\\.(?:ASSIGN(.*)|DATA(.*)|DEFINE(.*)|EQU(.*)|AELIF(.*)|AELSE(.*)|AERROR.*|ALIMIT.*|AEND[IRW]|AIF(?:DEF)?(.*)|AREPEAT(.*)|AWHILE(.*)))))?(.*)",
			"captures": {
				"1":  { "name": "invalid.illegal" },
				"2":  { "name": "keyword.other.asm.mnemonic" },
				"3":  { "patterns": [ { "include": "#label-instruction"				} ] },
				"4":  { "patterns": [ { "include": "#register-instruction"			} ] },
				"5":  { "patterns": [ { "include": "#pointer-instruction"			} ] },
				"6":  { "patterns": [ { "include": "#constant-instruction"			} ] },
				"7":  { "patterns": [ { "include": "#logic-instruction"				} ] },
				"8":  { "patterns": [ { "include": "#register-register-instruction"	} ] },
				"9":  { "patterns": [ { "include": "#add-instruction"				} ] },
				"10": { "patterns": [ { "include": "#cmp/eq-instruction"			} ] },
				"11": { "patterns": [ { "include": "#ldc-instruction"				} ] },
				"12": { "patterns": [ { "include": "#lds-instruction"				} ] },
				"13": { "patterns": [ { "include": "#mova-instruction"				} ] },
				"14": { "patterns": [ { "include": "#mov-instruction"				} ] },
				"15": { "patterns": [ { "include": "#stc-instruction"				} ] },
				"16": { "patterns": [ { "include": "#sts-instruction"				} ] },
				"17":  { "name": "keyword.control.asm" },
				"18": { "patterns": [ { "include": "#.assign-instruction"			} ] },
				"19": { "patterns": [ { "include": "#.data-instruction"				} ] },
				"20":  { "name": "support.function.asm" },
				"21": { "patterns": [ { "include": "#.equ-instruction"				} ] },
				"22":  { "name": "support.function.asm" },
				"23":  { "name": "support.function.asm" },
				"24":  { "name": "support.function.asm" },
				"25":  { "name": "support.function.asm" },
				"26":  { "name": "meta.preprocessor.string" },
				"27": { "name": "invalid.illegal" }
			}
		},
		"no-label-instructions": {
			"match": "(?i)(.*?\\s(\\.(?:ENDM|ALIGN(.*)|CPU(.*)|(?:(?:EX|IM)PORT|END)(.*)|GLOBAL(.*)|MACRO(.*)|ORG(.*)|SECTION(.*))))?(.*)",
			"captures": {
				"1":  { "name": "invalid.illegal" },
				"2":  { "name": "keyword.control.asm" },
				"3":  { "patterns": [ { "include": "#.align-instruction"			} ] },
				"4":  { "patterns": [ { "include": "#.cpu-instruction"				} ] },
				"5":  { "patterns": [ { "include": "#label-instruction"				} ] },
				"6":  { "patterns": [ { "include": "#.global-instruction"			} ] },
				"7":  { "patterns": [ { "include": "#.macro-instruction"			} ] },
				"8":  { "patterns": [ { "include": "#.org-instruction"				} ] },
				"9":  { "patterns": [ { "include": "#.section-instruction"			} ] },
				"10": { "patterns": [ { "include": "#instructions"					} ] }
			}
		},
		"label-instruction": {
			"match": "(.*?\\s.*?((?:\\w+)\\\\&?\\w+'?|\\w+))?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "name": "support.function.asm" },
				"3": { "name": "invalid.illegal" }
			}
		},
		"register-instruction": {
			"match": "(?i)(.*?\\s.*?(r.*))?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "patterns": [ { "include": "#register" } ] },
				"3": { "name": "invalid.illegal" }
			}
		},
		"pointer-instruction": {
			"match": "(?i)(.*?\\s.*?(@.*))?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "patterns": [ { "include": "#pointer" } ] },
				"3": { "name": "invalid.illegal" }
			}
		},
		"constant-instruction": {
			"match": "(?i)(.*?\\s.*?(#.*))?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "patterns": [ { "include": "#hashtag-constant" } ] },
				"3": { "name": "invalid.illegal" }
			}
		},
		"logic-instruction": {
			"match": "(?i)(?<Logic_B>\\.B)?(?:(.*?\\s.*?)(?:([#\\\\][^,]*)(?:,(.*?(?(<Logic_B>)(@.*)|(r0)))?)?|(?(<Logic_B>)$|(r.*))))?(.*)",
			"captures": {
				"1": { "name": "keyword.other.asm.mnemonic" },
				"2": { "name": "invalid.illegal" },
				"3": { "patterns": [ { "include": "#hashtag-constant" } ] },
				"4": { "name": "invalid.illegal" },
				"5": { "patterns": [ { "include": "#pointer-GBR" } ] },
				"6": { "name": "support.variable.asm" },
				"7": { "patterns": [ { "include": "#register-register" } ] },
				"8": { "name": "invalid.illegal" }
			}
		},
		"register-register-instruction": {
			"match": "(?i)(.*?\\s.*?(r.*))?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "patterns": [ { "include": "#register-register" } ] },
				"3": { "name": "invalid.illegal" }
			}
		},
		"add-instruction": {
			"match": "(?i)(?:(?:(\\S*\\s.*?)(?:(r[^,]*)|([#\\\\][^,]*)))(?:,(.*?(r.*))?)?)?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "patterns": [ { "include": "#register" } ] },
				"3": { "patterns": [ { "include": "#hashtag-constant" } ] },
				"4": { "name": "invalid.illegal" },
				"5": { "patterns": [ { "include": "#register" } ] },
				"6": { "name": "invalid.illegal" }
			}
		},
		"cmp/eq-instruction": {
			"match": "(?i)(?:(\\S*\\s.*?)(?:(r.*)|([#\\\\][^,]*)(?:,(.*?(r0))?)?))?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "patterns": [ { "include": "#register-register" } ] },
				"3": { "patterns": [ { "include": "#hashtag-constant" } ] },
				"4": { "name": "invalid.illegal" },
				"5": { "name": "support.variable.asm" },
				"6": { "name": "invalid.illegal" }
			}
		},
		"ldc-instruction": {
			"match": "(?i)(?:(?:(\\.L(.*?\\s.*?(@[^,]*))?)|(.*?\\s.*?(r[^,]*)))(?:,(.*))?)?(.*)",
			"captures": {
				"1": { "name": "keyword.other.asm.mnemonic" },
				"2": { "name": "invalid.illegal" },
				"3": { "patterns": [ { "include": "#pointer-increment" } ] },
				"4": { "name": "invalid.illegal" },
				"5": { "patterns": [ { "include": "#register" } ] },
				"6": { "patterns": [ { "include": "#control-register" } ] },
				"7": { "name": "invalid.illegal" }
			}
		},
		"lds-instruction": {
			"match": "(?i)(?:(?:(\\.L(.*?\\s.*?(@[^,]*))?)|(.*?\\s.*?(r[^,]*)))(?:,(.*))?)?(.*)",
			"captures": {
				"1": { "name": "keyword.other.asm.mnemonic" },
				"2": { "name": "invalid.illegal" },
				"3": { "patterns": [ { "include": "#pointer-increment" } ] },
				"4": { "name": "invalid.illegal" },
				"5": { "patterns": [ { "include": "#register" } ] },
				"6": { "patterns": [ { "include": "#system-register" } ] },
				"7": { "name": "invalid.illegal" }
			}
		},
		"mova-instruction": {
			"match": "(?i)(?:(\\S*\\s)([^,]*,[^,]*)(?:,(.*?(R0))?)?)?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "patterns": [ { "include": "#pointer-PC" } ] },
				"3": { "name": "invalid.illegal" },
				"4": { "name": "support.variable.asm" },
				"5": { "name": "invalid.illegal" }
			}
		},
		"mov-instruction": {
			"match": "(?i)(?:(\\.[BWL])?(\\S*\\s.*?)(?:(?:([#\\\\][^,]*)|(r[^,]*)|(@[^,]*))(?:(.*?),(.*?(?:(r.*)|(@.*)))?)?))?(.*)",
			"captures": {
				"1":  { "name": "keyword.other.asm.mnemonic" },
				"2":  { "name": "invalid.illegal" },
				"3":  { "patterns": [ { "include": "#hashtag-constant" } ] },
				"4":  { "patterns": [ { "include": "#register" } ] },
				"5":  { "patterns": [ { "include": "#pointer" } ] },
				"6":  { "name": "invalid.illegal" },
				"7":  { "name": "invalid.illegal" },
				"8":  { "patterns": [ { "include": "#register" } ] },
				"9":  { "patterns": [ { "include": "#pointer" } ] },
				"10": { "name": "invalid.illegal" }
			}
		},
		"stc-instruction": {
			"match": "(?i)(?<STC_L>\\.L)?(?:(\\S*)\\s([^,]*)(?:,(.*?(?(<STC_L>)(@.*)|(r.*)))?)?)?(.*)",
			"captures": {
				"1": { "name": "keyword.other.asm.mnemonic" },
				"2": { "name": "invalid.illegal" },
				"3": { "patterns": [ { "include": "#control-register" } ] },
				"4": { "name": "invalid.illegal" },
				"5": { "patterns": [ { "include": "#decrement-pointer" } ] },
				"6": { "patterns": [ { "include": "#register" } ] },
				"7": { "name": "invalid.illegal" }
			}
		},
		"sts-instruction": {
			"match": "(?i)(?<STC_L>\\.L)?(?:(.*?)\\s([^,]*)(?:,(.*?(?(<STC_L>)(@.*)|(r.*)))?)?)?(.*)",
			"captures": {
				"1": { "name": "keyword.other.asm.mnemonic" },
				"2": { "name": "invalid.illegal" },
				"3": { "patterns": [ { "include": "#system-register" } ] },
				"4": { "name": "invalid.illegal" },
				"5": { "patterns": [ { "include": "#decrement-pointer" } ] },
				"6": { "patterns": [ { "include": "#register" } ] },
				"7": { "name": "invalid.illegal" }
			}
		},
		".align-instruction": {
			"match": "(?i)(.*?\\s.*?(2147483648|1073741824|536870912|268435456|134217728|67108864|33554432|16777216|8388608|4194304|2097152|1048576|524288|262144|131072|65536|32768|16384|8192|4096|2048|1024|512|256|128|64|32|16|[8421]))?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "name": "constant.numeric.integer.decimal" },
				"3": { "name": "invalid.illegal" }
			}
		},
		".assign-instruction": {
			"match": "(?i)((?:(?<Num>A)|(?<Char>C)).*?\\s.*?(?:(.*)|(.*)))?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "name": "keyword.control.asm" },
				"3": { "name": "keyword.control.asm" },
				"4": { "name": "support.function.asm" },
				"4": { "name": "support.function.asm" },
				"5": { "name": "invalid.illegal" }
			}
		},
		".cpu-instruction": {
			"match": "(?i)(.*?\\s.*?(SH([14]|3?DSP|[23]E?)))?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "name": "meta.preprocessor.string" },
				"3": { "name": "meta.preprocessor.numeric" },
				"4": { "name": "invalid.illegal" }
			}
		},
		".data-instruction": {
			"match": "(?i)(?:(\\.[BWL])?(.*?\\s(.*))?)?(.*)",
			"captures": {
				"1": { "name": "keyword.control.asm" },
				"2": { "name": "invalid.illegal" },
				"3": { "patterns": [ { "include": "#constant" } ] },
				"4": { "name": "invalid.illegal" }
			}
		},
		".equ-instruction": {
			"match": "(?i)(.*?\\s(.*))?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "patterns": [ { "include": "#constant" } ] },
				"3": { "name": "invalid.illegal" }
			}
		},
		".global-instruction": {
			"match": "(?i)(.*?\\s.*?(SH([14]|3?DSP|[23]E?)))?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "name": "meta.preprocessor.string" },
				"3": { "name": "meta.preprocessor.numeric" },
				"4": { "name": "invalid.illegal" }
			}
		},
		".macro-instruction": {
			"match": "(?i)(?:(.*?\\s.*?)(?:(\\w+)(.*)))?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "name": "support.function.asm" },
				"3": { "patterns": [ { "include": "#macro-arguments" } ] },
				"4": { "name": "invalid.illegal" }
			}
		},
		".org-instruction": {
			"match": "(?i)(.*?\\s.*?(H.*))?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "patterns": [ { "include": "#constant-hexadecimal" } ] },
				"3": { "name": "invalid.illegal" }
			}
		},
		".section-instruction": {
			"match": "(?i)(?:(.*?\\s.*?)(\\w+)(?:(.*?),(?:(.*?)(CODE|DATA|STACK|DUMMY)(?:(.*?),(.*?(?:(LOCATE=)(.*?(H.*))?|(ALIGN=)(.*?(2147483648|1073741824|536870912|268435456|134217728|67108864|33554432|16777216|8388608|4194304|2097152|1048576|524288|262144|131072|65536|32768|16384|8192|4096|2048|1024|512|256|128|64|32|16|8|4))?))?)?)?)?)?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "name": "meta.preprocessor.string" },
				"3": { "name": "invalid.illegal" },
				"4": { "name": "invalid.illegal" },
				"5": { "name": "meta.preprocessor.string" },
				"6": { "name": "invalid.illegal" },
				"7": { "name": "invalid.illegal" },
				"8": { "name": "meta.preprocessor.string" },
				"9": { "name": "invalid.illegal" },
				"10": { "patterns": [ { "include": "#constant-hexadecimal" } ] },
				"11": { "name": "meta.preprocessor.string" },
				"12": { "name": "invalid.illegal" },
				"13": { "name": "meta.preprocessor.numeric.decimal" },
				"14": { "name": "invalid.illegal" }
			}
		},
		"register": {
			"match": "(?i)(r1[0-5]|r\\d?)?(.*)",
			"captures": {
				"1": { "name": "support.variable.asm" },
				"2": { "name": "invalid.illegal" }
			}
		},
		"register-register": {
			"match": "(?i)(r[^,]*)(?:(.*?),(.*?(r.*))?)?(.*)",
			"captures": {
				"1": { "patterns": [ { "include": "#register" } ] },
				"2": { "name": "invalid.illegal" },
				"3": { "name": "invalid.illegal" },
				"4": { "patterns": [ { "include": "#register" } ] },
				"5": { "name": "invalid.illegal" }
			}
		},
		"control-register": {
			"match": "(?i)(.*?([GV]BR|MOD|R[ES]|R[0-7]_BANK|SPC|S?SR))?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "name": "support.variable.asm" },
				"3": { "name": "invalid.illegal" }
			}
		},
		"system-register": {
			"match": "(?i)(.*?(FPSCR|FPUL|MAC[HL]|PR|DSR|A0|[XY][01]))?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "name": "support.variable.asm" },
				"3": { "name": "invalid.illegal" }
			}
		},
		"pointer": {
			"match": "(?i)(.*?(@r(?:1[0-5]|\\d)))?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "name": "support.variable.asm" },
				"3": { "name": "invalid.illegal" }
			}
		},
		"pointer-increment": {
			"match": "(?i)(.*?(@r(?:1[0-5]|\\d)\\+))?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "name": "support.variable.asm" },
				"3": { "name": "invalid.illegal" }
			}
		},
		"decrement-pointer": {
			"match": "(?i)(.*?(@-r(?:1[0-5]|\\d)))?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "name": "support.variable.asm" },
				"3": { "name": "invalid.illegal" }
			}
		},
		"pointer-GBR": {
			"match": "(?i)(?:(.*?)(@)(.*?)\\((.*?)(r0)(.*?),(.*?)(GBR)(.*?)\\))?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "name": "support.variable.asm" },
				"3": { "name": "invalid.illegal" },
				"4": { "name": "invalid.illegal" },
				"5": { "name": "support.variable.asm" },
				"6": { "name": "invalid.illegal" },
				"7": { "name": "invalid.illegal" },
				"8": { "name": "support.variable.asm" },
				"9": { "name": "invalid.illegal" },
				"10": { "name": "invalid.illegal" }
			}
		},
		"pointer-PC": {
			"match": "(?i)(?:(.*?)(@)(.*?)\\((.*?)(disp)(.*?),(.*?)(PC)(.*?)\\))?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "name": "support.variable.asm" },
				"3": { "name": "invalid.illegal" },
				"4": { "name": "invalid.illegal" },
				"5": { "name": "support.variable.asm" },
				"6": { "name": "invalid.illegal" },
				"7": { "name": "invalid.illegal" },
				"8": { "name": "support.variable.asm" },
				"9": { "name": "invalid.illegal" },
				"10": { "name": "invalid.illegal" }
			}
		},
		"hashtag-constant": {
			"match": "(?i)(.*?(?:(#)(.*)|(\\\\&?\\w+'?)))?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "name": "constant.numeric.integer" },
				"3": { "patterns": [ { "include": "#constant" } ] },
				"4": { "name": "meta.preprocessor.numeric" },
				"5": { "name": "invalid.illegal" }
			}
		},
		"constant": {
			"match": "(?i)(.*?(?:(\\\\&?\\w+'?)|(H.*)|((?:D')?-?\\d{0,10})))?(.*)",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "name": "support.function.asm" },
				"3": { "patterns": [ { "include": "#constant-hexadecimal" } ] },
				"4": { "name": "constant.numeric.integer.decimal" },
				"5": { "name": "invalid.illegal" }

			}
		},
		"constant-hexadecimal": {
			"match": "(?i)(H'(.*?)-?(.*?)\\h{0,8})?(.*)",
			"captures": {
				"1": { "name": "constant.numeric.integer.hexadecimal" },
				"2": { "name": "invalid.illegal" },
				"3": { "name": "invalid.illegal" },
				"4": { "name": "invalid.illegal" }
			}
		},
		"constant-decimal": {
			"match": "(?i)((?:D')?(.*?)-?(.*?)\\d{0,10})?(.*)",
			"captures": {
				"1": { "name": "constant.numeric.integer.decimal" },
				"2": { "name": "invalid.illegal" },
				"3": { "name": "invalid.illegal" },
				"4": { "name": "invalid.illegal" }
			}
		},
		"macro-arguments": {
			"match": "(?:(.*?\\s.*?)(\\w+),?)(.+)?",
			"captures": {
				"1": { "name": "invalid.illegal" },
				"2": { "name": "support.function.asm" },
				"3": { "patterns": [ { "include": "#macro-arguments" } ] }
			}
		}
	}
}